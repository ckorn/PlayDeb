Description: Changes the static linking of external libraries to dynamic link
Author: Matthew Bekkema <mat8913ftw@gmail.com>

---
 cmake/Modules/FindJson.cmake |   24 +++++++++++-------------
 src/CMakeLists.txt           |    4 ----
 2 files changed, 11 insertions(+), 17 deletions(-)

Index: freeminer-0.4.12.6/src/CMakeLists.txt
===================================================================
--- freeminer-0.4.12.6.orig/src/CMakeLists.txt	2015-02-21 18:55:52.467101222 +0100
+++ freeminer-0.4.12.6/src/CMakeLists.txt	2015-02-21 18:55:52.467101222 +0100
@@ -475,7 +475,6 @@
 	message (STATUS "LuaJIT not found, using bundled Lua.")
 	set(LUA_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/lua/src")
 	set(LUA_LIBRARY "lua")
-	add_subdirectory(lua)
 endif(NOT USE_LUAJIT)
 
 mark_as_advanced(LUA_LIBRARY)
@@ -1000,7 +999,6 @@
 
 if (JSON_FOUND)
 else (JSON_FOUND)
-	add_subdirectory(json)
 endif (JSON_FOUND)
 
 configure_file(
Index: freeminer-0.4.12.6/cmake/Modules/FindJson.cmake
===================================================================
--- freeminer-0.4.12.6.orig/cmake/Modules/FindJson.cmake	2015-02-21 18:55:52.467101222 +0100
+++ freeminer-0.4.12.6/cmake/Modules/FindJson.cmake	2015-02-21 18:55:52.467101222 +0100
@@ -1,18 +1,16 @@
 # Look for json, use our own if not found
 
-#FIND_PATH(JSON_INCLUDE_DIR json.h)
+FIND_PATH(JSON_INCLUDE_DIR json/json.h /usr/include/jsoncpp)
 
-#FIND_LIBRARY(JSON_LIBRARY NAMES jsoncpp)
+FIND_LIBRARY(JSON_LIBRARY NAMES jsoncpp)
 
-#IF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
-#	SET( JSON_FOUND TRUE )
-#ENDIF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
+IF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
+	SET( JSON_FOUND TRUE )
+ENDIF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
 
-#IF(JSON_FOUND)
-#	MESSAGE(STATUS "Found system jsoncpp header file in ${JSON_INCLUDE_DIR}")
-#	MESSAGE(STATUS "Found system jsoncpp library ${JSON_LIBRARY}")
-#ELSE(JSON_FOUND)
-	SET(JSON_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/json)
-	SET(JSON_LIBRARY jsoncpp)
-	MESSAGE(STATUS "Using project jsoncpp library")
-#ENDIF(JSON_FOUND)
+IF(JSON_FOUND)
+	MESSAGE(STATUS "Found system jsoncpp header file in ${JSON_INCLUDE_DIR}")
+	MESSAGE(STATUS "Found system jsoncpp library ${JSON_LIBRARY}")
+ELSE(JSON_FOUND)
+	MESSAGE(FAIL "Cannot find system-wide jsoncpp library")
+ENDIF(JSON_FOUND)
